<?php

namespace Database\Seeders;

use App\Models\Order;
use App\Models\Region;
use App\Models\ServiceProvider;
use App\Models\User;
use App\Traits\GeneralTrait;
use Carbon\Carbon;
use Illuminate\Database\Console\Seeds\WithoutModelEvents;
use Illuminate\Database\Seeder;
use Illuminate\Support\Facades\DB;

class ServiceSeeder extends Seeder
{
    use GeneralTrait;
    /**
     * Run the database seeds.
     */
    public function run(): void
    {
        DB::table('service_providers')->delete();
        $a=[
            'fake_image_services/a/1.jpeg',
            'fake_image_services/a/2.jpeg',
            'fake_image_services/a/3.jpeg',
            'fake_image_services/a/4.jpeg',
            'fake_image_services/a/5.png',
            'fake_image_services/a/6.jpeg',
            'fake_image_services/a/7.jpeg',
            'fake_image_services/a/8.jpeg',
            'fake_image_services/a/9.jpeg',
            'fake_image_services/a/10.jpeg',
        ];
        $b=[
            'fake_image_services/b/1.jpeg',
            'fake_image_services/b/2.jpeg',
            'fake_image_services/b/3.jpeg',
            'fake_image_services/b/4.jpeg',
            'fake_image_services/b/5.jpeg',
            'fake_image_services/b/6.jpeg',
            'fake_image_services/b/7.jpeg',
            'fake_image_services/b/8.jpeg',
            'fake_image_services/b/9.jpeg',
            'fake_image_services/b/10.jpeg',
        ];
        $c=[
            'fake_image_services/c/1.png',
            'fake_image_services/c/2.jpeg',
            'fake_image_services/c/3.jpeg',
            'fake_image_services/c/4.jpeg',
            'fake_image_services/c/5.jpeg',
            'fake_image_services/c/6.jpeg',
            'fake_image_services/c/7.jpeg',
            'fake_image_services/c/8.jpeg',
            'fake_image_services/c/9.jpeg',
            'fake_image_services/c/10.jpeg',
        ];
        $d=[
            'fake_image_services/d/1.jpeg',
            'fake_image_services/d/2.jpeg',
            'fake_image_services/d/3.jpeg',
            'fake_image_services/d/5.jpeg',
            'fake_image_services/d/6.jpeg',
            'fake_image_services/d/7.jpeg',
            'fake_image_services/d/8.jpeg',
            'fake_image_services/d/9.jpeg',
            'fake_image_services/d/10.jpeg',
            'fake_image_services/d/11.jpeg',
        ];
        $e=[
            'fake_image_services/e/1.jpeg',
            'fake_image_services/e/2.jpeg',
            'fake_image_services/e/3.jpeg',
            'fake_image_services/e/4.jpeg',
            'fake_image_services/e/5.jpeg',
            'fake_image_services/e/6.jpeg',
            'fake_image_services/e/7.jpeg',
            'fake_image_services/e/8.jpeg',
            'fake_image_services/e/9.jpeg',
            'fake_image_services/e/10.jpeg',
        ];
        $f=[
            'fake_image_services/f/1.jpeg',
            'fake_image_services/f/2.jpeg',
            'fake_image_services/f/3.jpeg',
            'fake_image_services/f/4.jpeg',
            'fake_image_services/f/5.jpeg',
            'fake_image_services/f/6.jpeg',
            'fake_image_services/f/7.jpeg',
            'fake_image_services/f/8.jpeg',
            'fake_image_services/f/9.jpeg',
            'fake_image_services/f/10.jpeg',
        ];
        $g=[
            'fake_image_services/g/1.jpeg',
            'fake_image_services/g/2.jpeg',
            'fake_image_services/g/3.jpeg',
            'fake_image_services/g/4.jpeg',
            'fake_image_services/g/5.jpeg',
            'fake_image_services/g/6.jpeg',
            'fake_image_services/g/7.jpeg',
            'fake_image_services/g/8.jpeg',
            'fake_image_services/g/9.jpeg',
            'fake_image_services/g/10.jpeg',
            'fake_image_services/g/11.jpeg',
        ];
        $k=[
            'fake_image_services/k/1.jpeg',
            'fake_image_services/k/2.jpeg',
            'fake_image_services/k/3.jpeg',
            'fake_image_services/k/4.jpeg',
            'fake_image_services/k/5.jpeg',
            'fake_image_services/k/6.jpeg',
            'fake_image_services/k/7.jpeg',
            'fake_image_services/k/8.jpeg',
            'fake_image_services/k/9.jpeg',
            'fake_image_services/k/10.jpeg',
            'fake_image_services/k/11.jpeg',
            'fake_image_services/k/12.png',
        ];
        $l=[
            'fake_image_services/l/1.jpeg',
            'fake_image_services/l/2.jpeg',
            'fake_image_services/l/3.jpeg',
            'fake_image_services/l/4.jpeg',
            'fake_image_services/l/5.jpeg',
            'fake_image_services/l/6.jpeg',
            'fake_image_services/l/7.jpeg',
            'fake_image_services/l/8.jpeg',
            'fake_image_services/l/9.jpeg',
            'fake_image_services/l/10.jpeg',
            'fake_image_services/l/11.jpeg',
        ];

        foreach ($a as $a_image){
            $first_name=fake('ar_JO')->firstNameMale();
            $last_name=fake('ar_JO')->lastName;
            $region_id=rand(1,Region::count());
            $secondary_address=fake('ar_JO')->address;
            $phone_number=fake('ar_JO')->phoneNumber;
            $email=fake()->email;
            $description=fake('ar_JO')->text;
            $services=[1,2];
            $business_image_url=$a_image;

            $provider=ServiceProvider::create([
                'first_name'=>$first_name,
                'last_name'=>$last_name,
                'business_image_url'=>$business_image_url,
                'region_id'=>$region_id,
                'secondary_address'=>$secondary_address,
                'phone_number'=>$phone_number,
                'email'=>$email,
                'description'=>$description,
                'isActive'=>1,
                'status'=>'accept'
            ]);
            $provider->categories()->sync($services);
            $provider->order()->create([
                'serial_number'=>$this->generate_serialnumber(Order::class),
                'date'=>Carbon::now()->toDate(),
                'user_id'=>rand(1,User::count()),
                'for_service_provider'=>true,
                'status'=>'posted'
            ]);
        }
        foreach ($b as $b_image){
            $first_name=fake('ar_JO')->firstNameMale();
            $last_name=fake('ar_JO')->lastName;
            $region_id=rand(1,Region::count());
            $secondary_address=fake('ar_JO')->address;
            $phone_number=fake('ar_JO')->phoneNumber;
            $email=fake()->email;
            $description=fake('ar_JO')->text;
            $services=[1,3];
            $business_image_url=$b_image;

            $provider=ServiceProvider::create([
                'first_name'=>$first_name,
                'last_name'=>$last_name,
                'business_image_url'=>$business_image_url,
                'region_id'=>$region_id,
                'secondary_address'=>$secondary_address,
                'phone_number'=>$phone_number,
                'email'=>$email,
                'description'=>$description,
                'isActive'=>1,
                'status'=>'accept'
            ]);
            $provider->categories()->sync($services);
            $provider->order()->create([
                'serial_number'=>$this->generate_serialnumber(Order::class),
                'date'=>Carbon::now()->toDate(),
                'user_id'=>rand(1,User::count()),
                'for_service_provider'=>true,
                'status'=>'posted'
            ]);
        }
        foreach ($c as $c_image){
            $first_name=fake('ar_JO')->firstNameMale();
            $last_name=fake('ar_JO')->lastName;
            $region_id=rand(1,Region::count());
            $secondary_address=fake('ar_JO')->address;
            $phone_number=fake('ar_JO')->phoneNumber;
            $email=fake()->email;
            $description=fake('ar_JO')->text;
            $services=[1,4];
            $business_image_url=$c_image;

            $provider=ServiceProvider::create([
                'first_name'=>$first_name,
                'last_name'=>$last_name,
                'business_image_url'=>$business_image_url,
                'region_id'=>$region_id,
                'secondary_address'=>$secondary_address,
                'phone_number'=>$phone_number,
                'email'=>$email,
                'description'=>$description,
                'isActive'=>1,
                'status'=>'accept'
            ]);
            $provider->categories()->sync($services);
            $provider->order()->create([
                'serial_number'=>$this->generate_serialnumber(Order::class),
                'date'=>Carbon::now()->toDate(),
                'user_id'=>rand(1,User::count()),
                'for_service_provider'=>true,
                'status'=>'posted'
            ]);
        }
        foreach ($d as $d_image){
            $first_name=fake('ar_JO')->firstNameMale();
            $last_name=fake('ar_JO')->lastName;
            $region_id=rand(1,Region::count());
            $secondary_address=fake('ar_JO')->address;
            $phone_number=fake('ar_JO')->phoneNumber;
            $email=fake()->email;
            $description=fake('ar_JO')->text;
            $services=[1,5];
            $business_image_url=$d_image;

            $provider=ServiceProvider::create([
                'first_name'=>$first_name,
                'last_name'=>$last_name,
                'business_image_url'=>$business_image_url,
                'region_id'=>$region_id,
                'secondary_address'=>$secondary_address,
                'phone_number'=>$phone_number,
                'email'=>$email,
                'description'=>$description,
                'isActive'=>1,
                'status'=>'accept'
            ]);
            $provider->categories()->sync($services);
            $provider->order()->create([
                'serial_number'=>$this->generate_serialnumber(Order::class),
                'date'=>Carbon::now()->toDate(),
                'user_id'=>rand(1,User::count()),
                'for_service_provider'=>true,
                'status'=>'posted'
            ]);
        }
        foreach ($e as $e_image){
            $first_name=fake('ar_JO')->firstNameMale();
            $last_name=fake('ar_JO')->lastName;
            $region_id=rand(1,Region::count());
            $secondary_address=fake('ar_JO')->address;
            $phone_number=fake('ar_JO')->phoneNumber;
            $email=fake()->email;
            $description=fake('ar_JO')->text;
            $services=[1,6];
            $business_image_url=$e_image;

            $provider=ServiceProvider::create([
                'first_name'=>$first_name,
                'last_name'=>$last_name,
                'business_image_url'=>$business_image_url,
                'region_id'=>$region_id,
                'secondary_address'=>$secondary_address,
                'phone_number'=>$phone_number,
                'email'=>$email,
                'description'=>$description,
                'isActive'=>1,
                'status'=>'accept'
            ]);
            $provider->categories()->sync($services);
            $provider->order()->create([
                'serial_number'=>$this->generate_serialnumber(Order::class),
                'date'=>Carbon::now()->toDate(),
                'user_id'=>rand(1,User::count()),
                'for_service_provider'=>true,
                'status'=>'posted'
            ]);
        }
        foreach ($f as $f_image){
            $first_name=fake('ar_JO')->firstNameMale();
            $last_name=fake('ar_JO')->lastName;
            $region_id=rand(1,Region::count());
            $secondary_address=fake('ar_JO')->address;
            $phone_number=fake('ar_JO')->phoneNumber;
            $email=fake()->email;
            $description=fake('ar_JO')->text;
            $services=[1,7];
            $business_image_url=$f_image;

            $provider=ServiceProvider::create([
                'first_name'=>$first_name,
                'last_name'=>$last_name,
                'business_image_url'=>$business_image_url,
                'region_id'=>$region_id,
                'secondary_address'=>$secondary_address,
                'phone_number'=>$phone_number,
                'email'=>$email,
                'description'=>$description,
                'isActive'=>1,
                'status'=>'accept'
            ]);
            $provider->categories()->sync($services);
            $provider->order()->create([
                'serial_number'=>$this->generate_serialnumber(Order::class),
                'date'=>Carbon::now()->toDate(),
                'user_id'=>rand(1,User::count()),
                'for_service_provider'=>true,
                'status'=>'posted'
            ]);
        }
        foreach ($g as $g_image){
            $first_name=fake('ar_JO')->firstNameMale();
            $last_name=fake('ar_JO')->lastName;
            $region_id=rand(1,Region::count());
            $secondary_address=fake('ar_JO')->address;
            $phone_number=fake('ar_JO')->phoneNumber;
            $email=fake()->email;
            $description=fake('ar_JO')->text;
            $services=[1,8];
            $business_image_url=$g_image;

            $provider=ServiceProvider::create([
                'first_name'=>$first_name,
                'last_name'=>$last_name,
                'business_image_url'=>$business_image_url,
                'region_id'=>$region_id,
                'secondary_address'=>$secondary_address,
                'phone_number'=>$phone_number,
                'email'=>$email,
                'description'=>$description,
                'isActive'=>1,
                'status'=>'accept'
            ]);
            $provider->categories()->sync($services);
            $provider->order()->create([
                'serial_number'=>$this->generate_serialnumber(Order::class),
                'date'=>Carbon::now()->toDate(),
                'user_id'=>rand(1,User::count()),
                'for_service_provider'=>true,
                'status'=>'posted'
            ]);
        }
        foreach ($k as $k_image){
            $first_name=fake('ar_JO')->firstNameMale();
            $last_name=fake('ar_JO')->lastName;
            $region_id=rand(1,Region::count());
            $secondary_address=fake('ar_JO')->address;
            $phone_number=fake('ar_JO')->phoneNumber;
            $email=fake()->email;
            $description=fake('ar_JO')->text;
            $services=[1,9];
            $business_image_url=$k_image;

            $provider=ServiceProvider::create([
                'first_name'=>$first_name,
                'last_name'=>$last_name,
                'business_image_url'=>$business_image_url,
                'region_id'=>$region_id,
                'secondary_address'=>$secondary_address,
                'phone_number'=>$phone_number,
                'email'=>$email,
                'description'=>$description,
                'isActive'=>1,
                'status'=>'accept'
            ]);
            $provider->categories()->sync($services);
            $provider->order()->create([
                'serial_number'=>$this->generate_serialnumber(Order::class),
                'date'=>Carbon::now()->toDate(),
                'user_id'=>rand(1,User::count()),
                'for_service_provider'=>true,
                'status'=>'posted'
            ]);
        }
        foreach ($l as $l_image){
            $first_name=fake('ar_JO')->firstNameMale();
            $last_name=fake('ar_JO')->lastName;
            $region_id=rand(1,Region::count());
            $secondary_address=fake('ar_JO')->address;
            $phone_number=fake('ar_JO')->phoneNumber;
            $email=fake()->email;
            $description=fake('ar_JO')->text;
            $services=[1,10];
            $business_image_url=$l_image;

            $provider=ServiceProvider::create([
                'first_name'=>$first_name,
                'last_name'=>$last_name,
                'business_image_url'=>$business_image_url,
                'region_id'=>$region_id,
                'secondary_address'=>$secondary_address,
                'phone_number'=>$phone_number,
                'email'=>$email,
                'description'=>$description,
                'isActive'=>1,
                'status'=>'accept'
            ]);
            $provider->categories()->sync($services);
            $provider->order()->create([
                'serial_number'=>$this->generate_serialnumber(Order::class),
                'date'=>Carbon::now()->toDate(),
                'user_id'=>rand(1,User::count()),
                'for_service_provider'=>true,
                'status'=>'posted'
            ]);
        }



    }
}
